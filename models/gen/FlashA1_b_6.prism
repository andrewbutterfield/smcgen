dtmc

// Fixed Parameters are [("b",6)]

// Constant Decls:
// -----
const int b = 6;
const int p;
const int c;
const int w;
const int MAXDIFF;
const int INIT = 1;
const int WRITE = 2;
const int SELECT = 3;
const int FINISH = 4;

// Module Decls:
// -----

module Flash

// Variable Decls:
// -----
fm_clean_1: [0..p];
fm_clean_2: [0..p];
fm_clean_3: [0..p];
fm_clean_4: [0..p];
fm_clean_5: [0..p];
fm_clean_6: [0..p];
fm_erase_1: [0..w];
fm_erase_2: [0..w];
fm_erase_3: [0..w];
fm_erase_4: [0..w];
fm_erase_5: [0..w];
fm_erase_6: [0..w];
pc: [INIT..FINISH] init INIT;
i: [0..c] init 0;

// Commands:
// -----

[] pc = INIT -> (fm_clean_1' = p) & (fm_erase_1' = 0) & (fm_clean_2' = p) & (fm_erase_2' = 0) & (fm_clean_3' = p) & (fm_erase_3' = 0) & (fm_clean_4' = p) & (fm_erase_4' = 0) & (fm_clean_5' = p) & (fm_erase_5' = 0) & (fm_clean_6' = p) & (fm_erase_6' = 0) & (pc' = WRITE) ;

[] pc = WRITE & i < c & writeable != 0 -> ((fm_clean_1 > 0 ? 1 / writeable : 0)): (fm_clean_1' = fm_clean_1 - 1) & (i' = i + 1) + ((fm_clean_2 > 0 ? 1 / writeable : 0)): (fm_clean_2' = fm_clean_2 - 1) & (i' = i + 1) + ((fm_clean_3 > 0 ? 1 / writeable : 0)): (fm_clean_3' = fm_clean_3 - 1) & (i' = i + 1) + ((fm_clean_4 > 0 ? 1 / writeable : 0)): (fm_clean_4' = fm_clean_4 - 1) & (i' = i + 1) + ((fm_clean_5 > 0 ? 1 / writeable : 0)): (fm_clean_5' = fm_clean_5 - 1) & (i' = i + 1) + ((fm_clean_6 > 0 ? 1 / writeable : 0)): (fm_clean_6' = fm_clean_6 - 1) & (i' = i + 1) ;

[] pc = WRITE & i < c & writeable = 0 -> (pc' = FINISH) ;

[] pc = WRITE & i = c -> (pc' = SELECT) ;

[] pc = SELECT & (candidates = 0 | !(can_erase)) -> (pc' = FINISH) ;

[] pc = SELECT & candidates != 0 & can_erase -> ((cand_1_2 ? 1 / candidates : 0)): (fm_clean_2' = fm_clean_2 - dirty_1) & (fm_clean_1' = p) & (fm_erase_1' = fm_erase_1 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_1_3 ? 1 / candidates : 0)): (fm_clean_3' = fm_clean_3 - dirty_1) & (fm_clean_1' = p) & (fm_erase_1' = fm_erase_1 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_1_4 ? 1 / candidates : 0)): (fm_clean_4' = fm_clean_4 - dirty_1) & (fm_clean_1' = p) & (fm_erase_1' = fm_erase_1 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_1_5 ? 1 / candidates : 0)): (fm_clean_5' = fm_clean_5 - dirty_1) & (fm_clean_1' = p) & (fm_erase_1' = fm_erase_1 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_1_6 ? 1 / candidates : 0)): (fm_clean_6' = fm_clean_6 - dirty_1) & (fm_clean_1' = p) & (fm_erase_1' = fm_erase_1 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_2_1 ? 1 / candidates : 0)): (fm_clean_1' = fm_clean_1 - dirty_2) & (fm_clean_2' = p) & (fm_erase_2' = fm_erase_2 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_2_3 ? 1 / candidates : 0)): (fm_clean_3' = fm_clean_3 - dirty_2) & (fm_clean_2' = p) & (fm_erase_2' = fm_erase_2 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_2_4 ? 1 / candidates : 0)): (fm_clean_4' = fm_clean_4 - dirty_2) & (fm_clean_2' = p) & (fm_erase_2' = fm_erase_2 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_2_5 ? 1 / candidates : 0)): (fm_clean_5' = fm_clean_5 - dirty_2) & (fm_clean_2' = p) & (fm_erase_2' = fm_erase_2 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_2_6 ? 1 / candidates : 0)): (fm_clean_6' = fm_clean_6 - dirty_2) & (fm_clean_2' = p) & (fm_erase_2' = fm_erase_2 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_3_1 ? 1 / candidates : 0)): (fm_clean_1' = fm_clean_1 - dirty_3) & (fm_clean_3' = p) & (fm_erase_3' = fm_erase_3 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_3_2 ? 1 / candidates : 0)): (fm_clean_2' = fm_clean_2 - dirty_3) & (fm_clean_3' = p) & (fm_erase_3' = fm_erase_3 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_3_4 ? 1 / candidates : 0)): (fm_clean_4' = fm_clean_4 - dirty_3) & (fm_clean_3' = p) & (fm_erase_3' = fm_erase_3 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_3_5 ? 1 / candidates : 0)): (fm_clean_5' = fm_clean_5 - dirty_3) & (fm_clean_3' = p) & (fm_erase_3' = fm_erase_3 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_3_6 ? 1 / candidates : 0)): (fm_clean_6' = fm_clean_6 - dirty_3) & (fm_clean_3' = p) & (fm_erase_3' = fm_erase_3 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_4_1 ? 1 / candidates : 0)): (fm_clean_1' = fm_clean_1 - dirty_4) & (fm_clean_4' = p) & (fm_erase_4' = fm_erase_4 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_4_2 ? 1 / candidates : 0)): (fm_clean_2' = fm_clean_2 - dirty_4) & (fm_clean_4' = p) & (fm_erase_4' = fm_erase_4 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_4_3 ? 1 / candidates : 0)): (fm_clean_3' = fm_clean_3 - dirty_4) & (fm_clean_4' = p) & (fm_erase_4' = fm_erase_4 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_4_5 ? 1 / candidates : 0)): (fm_clean_5' = fm_clean_5 - dirty_4) & (fm_clean_4' = p) & (fm_erase_4' = fm_erase_4 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_4_6 ? 1 / candidates : 0)): (fm_clean_6' = fm_clean_6 - dirty_4) & (fm_clean_4' = p) & (fm_erase_4' = fm_erase_4 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_5_1 ? 1 / candidates : 0)): (fm_clean_1' = fm_clean_1 - dirty_5) & (fm_clean_5' = p) & (fm_erase_5' = fm_erase_5 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_5_2 ? 1 / candidates : 0)): (fm_clean_2' = fm_clean_2 - dirty_5) & (fm_clean_5' = p) & (fm_erase_5' = fm_erase_5 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_5_3 ? 1 / candidates : 0)): (fm_clean_3' = fm_clean_3 - dirty_5) & (fm_clean_5' = p) & (fm_erase_5' = fm_erase_5 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_5_4 ? 1 / candidates : 0)): (fm_clean_4' = fm_clean_4 - dirty_5) & (fm_clean_5' = p) & (fm_erase_5' = fm_erase_5 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_5_6 ? 1 / candidates : 0)): (fm_clean_6' = fm_clean_6 - dirty_5) & (fm_clean_5' = p) & (fm_erase_5' = fm_erase_5 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_6_1 ? 1 / candidates : 0)): (fm_clean_1' = fm_clean_1 - dirty_6) & (fm_clean_6' = p) & (fm_erase_6' = fm_erase_6 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_6_2 ? 1 / candidates : 0)): (fm_clean_2' = fm_clean_2 - dirty_6) & (fm_clean_6' = p) & (fm_erase_6' = fm_erase_6 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_6_3 ? 1 / candidates : 0)): (fm_clean_3' = fm_clean_3 - dirty_6) & (fm_clean_6' = p) & (fm_erase_6' = fm_erase_6 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_6_4 ? 1 / candidates : 0)): (fm_clean_4' = fm_clean_4 - dirty_6) & (fm_clean_6' = p) & (fm_erase_6' = fm_erase_6 + 1) & (i' = 0) & (pc' = WRITE) + ((cand_6_5 ? 1 / candidates : 0)): (fm_clean_5' = fm_clean_5 - dirty_6) & (fm_clean_6' = p) & (fm_erase_6' = fm_erase_6 + 1) & (i' = 0) & (pc' = WRITE) ;

[] pc = FINISH -> true ;

endmodule


// Formulae:
// -----

formula writeable = (fm_clean_1 != 0 ? 1 : 0) + (fm_clean_2 != 0 ? 1 : 0) + (fm_clean_3 != 0 ? 1 : 0) + (fm_clean_4 != 0 ? 1 : 0) + (fm_clean_5 != 0 ? 1 : 0) + (fm_clean_6 != 0 ? 1 : 0) ;

formula dirty_1 = p - fm_clean_1 ;

formula dirty_2 = p - fm_clean_2 ;

formula dirty_3 = p - fm_clean_3 ;

formula dirty_4 = p - fm_clean_4 ;

formula dirty_5 = p - fm_clean_5 ;

formula dirty_6 = p - fm_clean_6 ;

formula cand_1_2 = dirty_1 > 0 & fm_clean_2 >= dirty_1 ;

formula cand_1_3 = dirty_1 > 0 & fm_clean_3 >= dirty_1 ;

formula cand_1_4 = dirty_1 > 0 & fm_clean_4 >= dirty_1 ;

formula cand_1_5 = dirty_1 > 0 & fm_clean_5 >= dirty_1 ;

formula cand_1_6 = dirty_1 > 0 & fm_clean_6 >= dirty_1 ;

formula cand_2_1 = dirty_2 > 0 & fm_clean_1 >= dirty_2 ;

formula cand_2_3 = dirty_2 > 0 & fm_clean_3 >= dirty_2 ;

formula cand_2_4 = dirty_2 > 0 & fm_clean_4 >= dirty_2 ;

formula cand_2_5 = dirty_2 > 0 & fm_clean_5 >= dirty_2 ;

formula cand_2_6 = dirty_2 > 0 & fm_clean_6 >= dirty_2 ;

formula cand_3_1 = dirty_3 > 0 & fm_clean_1 >= dirty_3 ;

formula cand_3_2 = dirty_3 > 0 & fm_clean_2 >= dirty_3 ;

formula cand_3_4 = dirty_3 > 0 & fm_clean_4 >= dirty_3 ;

formula cand_3_5 = dirty_3 > 0 & fm_clean_5 >= dirty_3 ;

formula cand_3_6 = dirty_3 > 0 & fm_clean_6 >= dirty_3 ;

formula cand_4_1 = dirty_4 > 0 & fm_clean_1 >= dirty_4 ;

formula cand_4_2 = dirty_4 > 0 & fm_clean_2 >= dirty_4 ;

formula cand_4_3 = dirty_4 > 0 & fm_clean_3 >= dirty_4 ;

formula cand_4_5 = dirty_4 > 0 & fm_clean_5 >= dirty_4 ;

formula cand_4_6 = dirty_4 > 0 & fm_clean_6 >= dirty_4 ;

formula cand_5_1 = dirty_5 > 0 & fm_clean_1 >= dirty_5 ;

formula cand_5_2 = dirty_5 > 0 & fm_clean_2 >= dirty_5 ;

formula cand_5_3 = dirty_5 > 0 & fm_clean_3 >= dirty_5 ;

formula cand_5_4 = dirty_5 > 0 & fm_clean_4 >= dirty_5 ;

formula cand_5_6 = dirty_5 > 0 & fm_clean_6 >= dirty_5 ;

formula cand_6_1 = dirty_6 > 0 & fm_clean_1 >= dirty_6 ;

formula cand_6_2 = dirty_6 > 0 & fm_clean_2 >= dirty_6 ;

formula cand_6_3 = dirty_6 > 0 & fm_clean_3 >= dirty_6 ;

formula cand_6_4 = dirty_6 > 0 & fm_clean_4 >= dirty_6 ;

formula cand_6_5 = dirty_6 > 0 & fm_clean_5 >= dirty_6 ;

formula candidates = (cand_1_2 ? 1 : 0) + (cand_1_3 ? 1 : 0) + (cand_1_4 ? 1 : 0) + (cand_1_5 ? 1 : 0) + (cand_1_6 ? 1 : 0) + (cand_2_1 ? 1 : 0) + (cand_2_3 ? 1 : 0) + (cand_2_4 ? 1 : 0) + (cand_2_5 ? 1 : 0) + (cand_2_6 ? 1 : 0) + (cand_3_1 ? 1 : 0) + (cand_3_2 ? 1 : 0) + (cand_3_4 ? 1 : 0) + (cand_3_5 ? 1 : 0) + (cand_3_6 ? 1 : 0) + (cand_4_1 ? 1 : 0) + (cand_4_2 ? 1 : 0) + (cand_4_3 ? 1 : 0) + (cand_4_5 ? 1 : 0) + (cand_4_6 ? 1 : 0) + (cand_5_1 ? 1 : 0) + (cand_5_2 ? 1 : 0) + (cand_5_3 ? 1 : 0) + (cand_5_4 ? 1 : 0) + (cand_5_6 ? 1 : 0) + (cand_6_1 ? 1 : 0) + (cand_6_2 ? 1 : 0) + (cand_6_3 ? 1 : 0) + (cand_6_4 ? 1 : 0) + (cand_6_5 ? 1 : 0) ;

formula can_erase = fm_erase_1 < w & fm_erase_2 < w & fm_erase_3 < w & fm_erase_4 < w & fm_erase_5 < w & fm_erase_6 < w ;

formula diff_1_2 = fm_erase_1 - fm_erase_2 ;

formula diff_1_3 = fm_erase_1 - fm_erase_3 ;

formula diff_1_4 = fm_erase_1 - fm_erase_4 ;

formula diff_1_5 = fm_erase_1 - fm_erase_5 ;

formula diff_1_6 = fm_erase_1 - fm_erase_6 ;

formula diff_2_1 = fm_erase_2 - fm_erase_1 ;

formula diff_2_3 = fm_erase_2 - fm_erase_3 ;

formula diff_2_4 = fm_erase_2 - fm_erase_4 ;

formula diff_2_5 = fm_erase_2 - fm_erase_5 ;

formula diff_2_6 = fm_erase_2 - fm_erase_6 ;

formula diff_3_1 = fm_erase_3 - fm_erase_1 ;

formula diff_3_2 = fm_erase_3 - fm_erase_2 ;

formula diff_3_4 = fm_erase_3 - fm_erase_4 ;

formula diff_3_5 = fm_erase_3 - fm_erase_5 ;

formula diff_3_6 = fm_erase_3 - fm_erase_6 ;

formula diff_4_1 = fm_erase_4 - fm_erase_1 ;

formula diff_4_2 = fm_erase_4 - fm_erase_2 ;

formula diff_4_3 = fm_erase_4 - fm_erase_3 ;

formula diff_4_5 = fm_erase_4 - fm_erase_5 ;

formula diff_4_6 = fm_erase_4 - fm_erase_6 ;

formula diff_5_1 = fm_erase_5 - fm_erase_1 ;

formula diff_5_2 = fm_erase_5 - fm_erase_2 ;

formula diff_5_3 = fm_erase_5 - fm_erase_3 ;

formula diff_5_4 = fm_erase_5 - fm_erase_4 ;

formula diff_5_6 = fm_erase_5 - fm_erase_6 ;

formula diff_6_1 = fm_erase_6 - fm_erase_1 ;

formula diff_6_2 = fm_erase_6 - fm_erase_2 ;

formula diff_6_3 = fm_erase_6 - fm_erase_3 ;

formula diff_6_4 = fm_erase_6 - fm_erase_4 ;

formula diff_6_5 = fm_erase_6 - fm_erase_5 ;

formula toobig = diff_1_2 >= MAXDIFF | diff_1_3 >= MAXDIFF | diff_1_4 >= MAXDIFF | diff_1_5 >= MAXDIFF | diff_1_6 >= MAXDIFF | diff_2_1 >= MAXDIFF | diff_2_3 >= MAXDIFF | diff_2_4 >= MAXDIFF | diff_2_5 >= MAXDIFF | diff_2_6 >= MAXDIFF | diff_3_1 >= MAXDIFF | diff_3_2 >= MAXDIFF | diff_3_4 >= MAXDIFF | diff_3_5 >= MAXDIFF | diff_3_6 >= MAXDIFF | diff_4_1 >= MAXDIFF | diff_4_2 >= MAXDIFF | diff_4_3 >= MAXDIFF | diff_4_5 >= MAXDIFF | diff_4_6 >= MAXDIFF | diff_5_1 >= MAXDIFF | diff_5_2 >= MAXDIFF | diff_5_3 >= MAXDIFF | diff_5_4 >= MAXDIFF | diff_5_6 >= MAXDIFF | diff_6_1 >= MAXDIFF | diff_6_2 >= MAXDIFF | diff_6_3 >= MAXDIFF | diff_6_4 >= MAXDIFF | diff_6_5 >= MAXDIFF ;
